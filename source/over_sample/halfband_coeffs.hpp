#pragma once

#include <array>

namespace zldsp::oversample {
    // naming filter order + transition bandwidth + stopband attenuation
    static constexpr std::array kCoeff_100_05_80 = {
        0.0,6.52364355410327e-05,0.0,-0.0001014910432927833,0.0,0.00017738723443080944,0.0,-0.00028763903259614927,0.0,0.00044195684803383204,0.0,-0.0006516437219552133,0.0,0.0009296725147098695,0.0,-0.001290823952489021,0.0,0.0017518528205732527,0.0,-0.002331946938757105,0.0,0.0030532320518019346,0.0,-0.003941651337924114,0.0,0.005028397888835237,0.0,-0.006352416028433377,0.0,0.00796424393121381,0.0,-0.009932545880947968,0.0,0.012355659330685989,0.0,-0.015382362178163288,0.0,0.019251753090896915,0.0,-0.02437763493607013,0.0,0.0315442297561543,0.0,-0.0424385858821538,0.0,0.061459506867685906,0.0,-0.1047620166389916,0.0,0.3178323170632957,0.5000399129227611,0.3178323170632957,0.0,-0.1047620166389916,0.0,0.061459506867685906,0.0,-0.0424385858821538,0.0,0.0315442297561543,0.0,-0.02437763493607013,0.0,0.019251753090896915,0.0,-0.015382362178163288,0.0,0.012355659330685989,0.0,-0.009932545880947968,0.0,0.00796424393121381,0.0,-0.006352416028433377,0.0,0.005028397888835237,0.0,-0.003941651337924114,0.0,0.0030532320518019346,0.0,-0.002331946938757105,0.0,0.0017518528205732527,0.0,-0.001290823952489021,0.0,0.0009296725147098695,0.0,-0.0006516437219552133,0.0,0.00044195684803383204,0.0,-0.00028763903259614927,0.0,0.00017738723443080944,0.0,-0.0001014910432927833,0.0,6.52364355410327e-05,0.0
    };
    static constexpr std::array kCoeff_64_08_80 = {
        0.0, -9.01981280352212e-05, 0.0, 0.00022416178567892414, 0.0, -0.00048572848552952066, 0.0,
        0.0009274163508853641, 0.0, -0.0016244938163920664, 0.0, 0.0026701352805986326, 0.0, -0.004179102868540597, 0.0,
        0.006295373838134339, 0.0, -0.00920883750248922, 0.0, 0.01319102107783446, 0.0, -0.018675312802699833, 0.0,
        0.02645018261392273, 0.0, -0.038189452667707575, 0.0, 0.05826156012408046, 0.0, -0.10277538756226103, 0.0,
        0.31715851782994225, 0.5000684432097146, 0.31715851782994225, 0.0, -0.10277538756226103, 0.0,
        0.05826156012408046, 0.0, -0.038189452667707575, 0.0, 0.02645018261392273, 0.0, -0.018675312802699833, 0.0,
        0.01319102107783446, 0.0, -0.00920883750248922, 0.0, 0.006295373838134339, 0.0, -0.004179102868540597, 0.0,
        0.0026701352805986326, 0.0, -0.0016244938163920664, 0.0, 0.0009274163508853641, 0.0, -0.00048572848552952066,
        0.0, 0.00022416178567892414, 0.0, -9.01981280352212e-05, 0.0
    };

    static constexpr std::array kCoeff_52_10_80 = {
        0.0, 0.00011071833641849496, 0.0, -0.00034292125098919817, 0.0, 0.0008340730541547668, 0.0,
        -0.0017335249370894709, 0.0, 0.003244362402711567, 0.0, -0.005630398866738123, 0.0, 0.009242395565167542, 0.0,
        -0.014586502646620205, 0.0, 0.02250479985326706, 0.0, -0.034695176940198295, 0.0, 0.05551339943988561, 0.0,
        -0.10101812841049512, 0.0, 0.31655390623272733, 0.5000711190817596, 0.31655390623272733, 0.0,
        -0.10101812841049512, 0.0, 0.05551339943988561, 0.0, -0.034695176940198295, 0.0, 0.02250479985326706, 0.0,
        -0.014586502646620205, 0.0, 0.009242395565167542, 0.0, -0.005630398866738123, 0.0, 0.003244362402711567, 0.0,
        -0.0017335249370894709, 0.0, 0.0008340730541547668, 0.0, -0.00034292125098919817, 0.0, 0.00011071833641849496,
        0.0
    };

    static constexpr std::array kCoeff_44_12_80 = {
        0.0, 0.00013498943798018933, 0.0, -0.0004993652300787903, 0.0, 0.0013406196883777952, 0.0,
        -0.002991904007292802, 0.0, 0.005916844304023184, 0.0, -0.010757791182273045, 0.0, 0.01848875285276081, 0.0,
        -0.030903289117369722, 0.0, 0.05238930094038197, 0.0, -0.09895899331253877, 0.0, 0.3158347635709793,
        0.5000749800949555, 0.3158347635709793, 0.0, -0.09895899331253877, 0.0, 0.05238930094038197, 0.0,
        -0.030903289117369722, 0.0, 0.01848875285276081, 0.0, -0.010757791182273045, 0.0, 0.005916844304023184, 0.0,
        -0.002991904007292802, 0.0, 0.0013406196883777952, 0.0, -0.0004993652300787903, 0.0, 0.00013498943798018933, 0.0
    };

    static constexpr std::array kCoeff_32_20_80 = {
        0.0, -0.00010464051123741196, 0.0, 0.000687109383707647, 0.0, -0.0026458132455302666, 0.0, 0.007661717682935692,
        0.0, -0.018561877487095802, 0.0, 0.04070663073752234, 0.0, -0.09052114569298732, 0.0, 0.31275095320158597,
        0.49990423235306997, 0.31275095320158597, 0.0, -0.09052114569298732, 0.0, 0.04070663073752234, 0.0,
        -0.018561877487095802, 0.0, 0.007661717682935692, 0.0, -0.0026458132455302666, 0.0, 0.000687109383707647, 0.0,
        -0.00010464051123741196, 0.0
    };

    static constexpr std::array kCoeff_24_24_80 = {
        0.0, -0.0004022212844768314, 0.0, 0.002754386889428848, 0.0, -0.010709903925253008, 0.0, 0.0313595024672789,
        0.0, -0.08273473244332982, 0.0, 0.3097030643487805, 0.5000806463787013, 0.3097030643487805, 0.0,
        -0.08273473244332982, 0.0, 0.0313595024672789, 0.0, -0.010709903925253008, 0.0, 0.002754386889428848, 0.0,
        -0.0004022212844768314, 0.0
    };

    template<std::size_t N>
    constexpr std::array<float, N> to_float_array(const std::array<double, N> &arr) {
        std::array<float, N> float_arr{};
        for (std::size_t i = 0; i < N; ++i) {
            float_arr[i] = static_cast<float>(arr[i]);
        }
        return float_arr;
    }

    static constexpr std::array kCoeff_100_05_80_float = to_float_array(kCoeff_100_05_80);
    static constexpr std::array kCoeff_64_08_80_float = to_float_array(kCoeff_64_08_80);
    static constexpr std::array kCoeff_52_10_80_float = to_float_array(kCoeff_52_10_80);
    static constexpr std::array kCoeff_44_12_80_float = to_float_array(kCoeff_44_12_80);
    static constexpr std::array kCoeff_32_20_80_float = to_float_array(kCoeff_32_20_80);
    static constexpr std::array kCoeff_24_24_80_float = to_float_array(kCoeff_24_24_80);
}
